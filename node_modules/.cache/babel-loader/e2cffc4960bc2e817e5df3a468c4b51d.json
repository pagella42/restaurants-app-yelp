{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport './reducer';\nimport axios from 'axios';\nimport Consts from '../Consts';\nconst CREATE_ROUTE = Consts.CREATE_ROUTE;\nexport const getRestaurants = () => {\n  return async dispatch => {\n    console.log(location); // axios.get(Consts.CREATE_ROUTE(`restaurants/${location}`)).then(response => {\n    //   console.log(response)\n    //     // dispatch(fetchUnreadNotificationsFulfilled(response.data.unread))\n    // }).catch(error => {\n    //   console.log(error)\n    //   // console.log(error)\n    //   // dispatch(fetchUnreadNotificationsFulfilled([]))\n    // })\n  };\n};\nexport default createStore(reducer, applyMiddleware(thunk));","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/interview/financial education/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","reducer","axios","Consts","CREATE_ROUTE","getRestaurants","dispatch","console","log","location"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,MAAMC,YAAY,GAAGD,MAAM,CAACC,YAA5B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAO,MAAOC,QAAP,IAAoB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,EADyB,CAEzB;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAED,GAbD;AAeD,CAhBM;AAkBP,eAAeX,WAAW,CAACG,OAAD,EAAUF,eAAe,CAACC,KAAD,CAAzB,CAA1B","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport { } from './reducer';\nimport axios from 'axios';\nimport Consts from '../Consts'\nconst CREATE_ROUTE = Consts.CREATE_ROUTE\n\nexport const getRestaurants = () => {\n  return async (dispatch) => {\n    console.log(location)\n    // axios.get(Consts.CREATE_ROUTE(`restaurants/${location}`)).then(response => {\n    //   console.log(response)\n    //     // dispatch(fetchUnreadNotificationsFulfilled(response.data.unread))\n    // }).catch(error => {\n    //   console.log(error)\n\n    //   // console.log(error)\n    //   // dispatch(fetchUnreadNotificationsFulfilled([]))\n\n    // })\n\n  }\n\n}\n\nexport default createStore(reducer, applyMiddleware(thunk));"]},"metadata":{},"sourceType":"module"}