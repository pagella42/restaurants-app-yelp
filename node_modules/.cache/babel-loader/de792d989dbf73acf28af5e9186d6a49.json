{"ast":null,"code":"import _slicedToArray from \"/Users/francopagella/Desktop/code/interview/financial education/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/francopagella/Desktop/code/interview/financial education/src/components/list/List.js\";\nimport React, { useState, useEffect } from 'react';\nimport './list.css';\nimport Top from './top/Top';\nimport Results from './results/Results';\n\nfunction List({\n  props\n}) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        search = _useState2[0],\n        setSearch = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        list = _useState4[0],\n        setList = _useState4[1];\n\n  let searchChange = event => {\n    setSearch(event.target.value);\n  };\n\n  useEffect(() => {\n    if (props.data && props.page === \"peliculas\") {\n      let newList = [];\n      props.data.films.data.forEach(d => d.title.includes(search) ? newList.push(d.title) : null);\n      setList(newList);\n    } else if (props.data && props.page === \"personajes\") {\n      let newList = [];\n      props.data.people.data.forEach(d => d.name.includes(search) ? newList.push(d.name) : null);\n      setList(newList);\n    }\n  }, [props.data, props.page, search]);\n  return React.createElement(\"div\", {\n    id: \"list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Top, {\n    page: props.page,\n    search: search,\n    setSearch: setSearch,\n    searchChange: searchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Results, {\n    list: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/interview/financial education/src/components/list/List.js"],"names":["React","useState","useEffect","Top","Results","List","props","search","setSearch","list","setList","searchChange","event","target","value","data","page","newList","films","forEach","d","title","includes","push","people","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAuB;AAAA,oBAEQL,QAAQ,CAAC,EAAD,CAFhB;AAAA;AAAA,QAEbM,MAFa;AAAA,QAELC,SAFK;;AAAA,qBAGIP,QAAQ,CAAC,EAAD,CAHZ;AAAA;AAAA,QAGbQ,IAHa;AAAA,QAGPC,OAHO;;AAKpB,MAAIC,YAAY,GAAIC,KAAD,IAAW;AAC3BJ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACF,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACb,QAAII,KAAK,CAACS,IAAN,IAAcT,KAAK,CAACU,IAAN,KAAe,WAAjC,EAA8C;AAC3C,UAAIC,OAAO,GAAG,EAAd;AACAX,MAAAA,KAAK,CAACS,IAAN,CAAWG,KAAX,CAAiBH,IAAjB,CAAsBI,OAAtB,CAA8BC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,QAAR,CAAiBf,MAAjB,IAA0BU,OAAO,CAACM,IAAR,CAAaH,CAAC,CAACC,KAAf,CAA1B,GAAiD,IAApF;AACAX,MAAAA,OAAO,CAACO,OAAD,CAAP;AACF,KAJD,MAKK,IAAIX,KAAK,CAACS,IAAN,IAAcT,KAAK,CAACU,IAAN,KAAe,YAAjC,EAA+C;AACjD,UAAIC,OAAO,GAAG,EAAd;AACAX,MAAAA,KAAK,CAACS,IAAN,CAAWS,MAAX,CAAkBT,IAAlB,CAAuBI,OAAvB,CAA+BC,CAAC,IAAGA,CAAC,CAACK,IAAF,CAAOH,QAAP,CAAgBf,MAAhB,IAA0BU,OAAO,CAACM,IAAR,CAAaH,CAAC,CAACK,IAAf,CAA1B,GAAgD,IAAnF;AACAf,MAAAA,OAAO,CAACO,OAAD,CAAP;AACF;AACH,GAXQ,EAWN,CAACX,KAAK,CAACS,IAAP,EAAaT,KAAK,CAACU,IAAnB,EAAyBT,MAAzB,CAXM,CAAT;AAcA,SACG;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAED,KAAK,CAACU,IAAjB;AAAuB,IAAA,MAAM,EAAET,MAA/B;AAAuC,IAAA,SAAS,EAAEC,SAAlD;AAA6D,IAAA,YAAY,EAAEG,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAGG,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEF,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADH;AAQF;;AAGD,eAAeJ,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './list.css'\nimport Top from './top/Top';\nimport Results from './results/Results';\n\nfunction List({props}) {\n\n   const [search, setSearch] = useState(\"\")\n   const [list, setList] = useState([])\n\n   let searchChange = (event) => {\n      setSearch(event.target.value)\n   }\n\n   useEffect(() => {\n      if (props.data && props.page === \"peliculas\") {\n         let newList = []\n         props.data.films.data.forEach(d => d.title.includes(search)? newList.push(d.title): null)\n         setList(newList)\n      }\n      else if (props.data && props.page === \"personajes\") {\n         let newList = []\n         props.data.people.data.forEach(d =>d.name.includes(search)?  newList.push(d.name): null)\n         setList(newList)\n      }\n   }, [props.data, props.page, search])\n\n\n   return (\n      <div id=\"list-container\">\n         <Top page={props.page} search={search} setSearch={setSearch} searchChange={searchChange} />\n\n         <Results list={list} />\n      </div>\n\n   )\n}\n\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}