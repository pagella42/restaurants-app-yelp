{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\nimport { fetchRestaurants, fetchRestaurantsError } from \"./reducer\";\nimport axios from \"axios\";\nimport { CREATE_ROUTE, REQUEST_RESULTS_LIMIT, USER_DEFAULT_LOCATION } from \"../Consts\";\nexport const getRestaurants = (location, category) => {\n  return async dispatch => {\n    if (!location && !category) {\n      dispatch(fetchRestaurants([]));\n    } else if (location) {\n      axios.get(CREATE_ROUTE(\"restaurants/\".concat(REQUEST_RESULTS_LIMIT, \"/\").concat(location, \"/null\"))).then(response => {\n        console.log(response);\n        dispatch(fetchRestaurants(response.data.data));\n      }).catch(error => {\n        dispatch(fetchRestaurantsError(error));\n      });\n    }\n\n    ;\n  };\n};\nexport default createStore(reducer, applyMiddleware(thunk));","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/interview/financial education/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","reducer","fetchRestaurants","fetchRestaurantsError","axios","CREATE_ROUTE","REQUEST_RESULTS_LIMIT","USER_DEFAULT_LOCATION","getRestaurants","location","category","dispatch","get","then","response","console","log","data","catch","error"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,QAAwD,WAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,qBAAvB,EAA8CC,qBAA9C,QAA2E,WAA3E;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpD,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAG,CAACF,QAAD,IAAa,CAACC,QAAjB,EAA0B;AACxBC,MAAAA,QAAQ,CAACT,gBAAgB,CAAC,EAAD,CAAjB,CAAR;AACD,KAFD,MAGK,IAAIO,QAAJ,EAAa;AAChBL,MAAAA,KAAK,CACJQ,GADD,CACKP,YAAY,uBAAgBC,qBAAhB,cAAyCG,QAAzC,WADjB,EAECI,IAFD,CAEOC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,QAAAA,QAAQ,CAACT,gBAAgB,CAACY,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAAjB,CAAR;AACD,OALD,EAMCC,KAND,CAMQC,KAAD,IAAW;AAChBR,QAAAA,QAAQ,CAACR,qBAAqB,CAACgB,KAAD,CAAtB,CAAR;AACD,OARD;AASH;;AAAA;AACE,GAfH;AAiBD,CAlBM;AAqBP,eAAerB,WAAW,CAACG,OAAD,EAAUF,eAAe,CAACC,KAAD,CAAzB,CAA1B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\nimport { fetchRestaurants, fetchRestaurantsError } from \"./reducer\";\nimport axios from \"axios\";\nimport { CREATE_ROUTE, REQUEST_RESULTS_LIMIT, USER_DEFAULT_LOCATION } from \"../Consts\";\n\nexport const getRestaurants = (location, category) => {\n  return async (dispatch) => {\n    if(!location && !category){\n      dispatch(fetchRestaurants([]));\n    }\n    else if (location){\n      axios\n      .get(CREATE_ROUTE(`restaurants/${REQUEST_RESULTS_LIMIT}/${location}/null`))\n      .then((response) => {\n        console.log(response)\n        dispatch(fetchRestaurants(response.data.data));\n      })\n      .catch((error) => {\n        dispatch(fetchRestaurantsError(error));\n      });\n  };\n    }\n   \n};\n\n\nexport default createStore(reducer, applyMiddleware(thunk));\n"]},"metadata":{},"sourceType":"module"}