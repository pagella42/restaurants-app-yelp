{"ast":null,"code":"import _slicedToArray from \"/Users/francopagella/Desktop/code/interview/financial education/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/francopagella/Desktop/code/interview/financial education/src/components/list/List.js\";\nimport React, { useState, useEffect } from 'react';\nimport './list.css';\nimport Top from './top/Top';\nimport Results from './results/Results';\n\nfunction List({\n  data,\n  page,\n  search,\n  setSearch\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  let searchChange = event => {\n    setSearch(event.target.value);\n  };\n\n  useEffect(() => {\n    if (data && page === \"location\") {\n      let newList = [];\n      data.films.data.forEach(d => d.title.includes(search) ? newList.push(d.title) : null);\n      setList(newList);\n    } else if (data && page === \"categories\") {\n      let newList = [];\n      data.people.data.forEach(d => d.name.includes(search) ? newList.push(d.name) : null);\n      setList(newList);\n    }\n  }, [data, page, search]);\n  return React.createElement(\"div\", {\n    id: \"list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Top, {\n    page: page,\n    search: search,\n    setSearch: setSearch,\n    searchChange: searchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Results, {\n    list: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => ({\n  restaurants: state.restaurants\n});\n\nexport default connect(mapStateToProps)(List);","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/interview/financial education/src/components/list/List.js"],"names":["React","useState","useEffect","Top","Results","List","data","page","search","setSearch","list","setList","searchChange","event","target","value","newList","films","forEach","d","title","includes","push","people","name","mapStateToProps","state","restaurants","connect"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAd,EAA+C;AAAA,oBAEpBR,QAAQ,CAAC,EAAD,CAFY;AAAA;AAAA,QAErCS,IAFqC;AAAA,QAE/BC,OAF+B;;AAI5C,MAAIC,YAAY,GAAIC,KAAD,IAAW;AAC3BJ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACF,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACb,QAAII,IAAI,IAAIC,IAAI,KAAK,UAArB,EAAiC;AAC9B,UAAIS,OAAO,GAAG,EAAd;AACAV,MAAAA,IAAI,CAACW,KAAL,CAAWX,IAAX,CAAgBY,OAAhB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,QAAR,CAAiBb,MAAjB,IAA0BQ,OAAO,CAACM,IAAR,CAAaH,CAAC,CAACC,KAAf,CAA1B,GAAiD,IAA9E;AACAT,MAAAA,OAAO,CAACK,OAAD,CAAP;AACF,KAJD,MAKK,IAAIV,IAAI,IAAIC,IAAI,KAAK,YAArB,EAAmC;AACrC,UAAIS,OAAO,GAAG,EAAd;AACAV,MAAAA,IAAI,CAACiB,MAAL,CAAYjB,IAAZ,CAAiBY,OAAjB,CAAyBC,CAAC,IAAGA,CAAC,CAACK,IAAF,CAAOH,QAAP,CAAgBb,MAAhB,IAA0BQ,OAAO,CAACM,IAAR,CAAaH,CAAC,CAACK,IAAf,CAA1B,GAAgD,IAA7E;AACAb,MAAAA,OAAO,CAACK,OAAD,CAAP;AACF;AACH,GAXQ,EAWN,CAACV,IAAD,EAAOC,IAAP,EAAaC,MAAb,CAXM,CAAT;AAcA,SACG;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAED,IAAX;AAAiB,IAAA,MAAM,EAAEC,MAAzB;AAAiC,IAAA,SAAS,EAAEC,SAA5C;AAAuD,IAAA,YAAY,EAAEG,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAGG,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEF,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADH;AAQF;;AAGD,MAAMe,eAAe,GAAGC,KAAK,KAAK;AAC/BC,EAAAA,WAAW,EAAED,KAAK,CAACC;AADY,CAAL,CAA7B;;AAKA,eAAeC,OAAO,CAACH,eAAD,CAAP,CAAyBpB,IAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './list.css'\nimport Top from './top/Top';\nimport Results from './results/Results';\n\nfunction List({data, page, search, setSearch}) {\n\n   const [list, setList] = useState([])\n\n   let searchChange = (event) => {\n      setSearch(event.target.value)\n   }\n\n   useEffect(() => {\n      if (data && page === \"location\") {\n         let newList = []\n         data.films.data.forEach(d => d.title.includes(search)? newList.push(d.title): null)\n         setList(newList)\n      }\n      else if (data && page === \"categories\") {\n         let newList = []\n         data.people.data.forEach(d =>d.name.includes(search)?  newList.push(d.name): null)\n         setList(newList)\n      }\n   }, [data, page, search])\n\n\n   return (\n      <div id=\"list-container\">\n         <Top page={page} search={search} setSearch={setSearch} searchChange={searchChange} />\n\n         <Results list={list} />\n      </div>\n\n   )\n}\n\n\nconst mapStateToProps = state => ({\n   restaurants: state.restaurants\n})\n\n\nexport default connect(mapStateToProps)(List);\n\n\n\n"]},"metadata":{},"sourceType":"module"}