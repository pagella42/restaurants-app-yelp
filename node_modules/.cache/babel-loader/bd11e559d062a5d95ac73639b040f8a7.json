{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport './reducer';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-community/async-storage';\nexport const getRestaurants = () => {\n  return async dispatch => {\n    //put token in all redux\n    let asyncReq = await AsyncStorage.getItem('user');\n    let userInfo = JSON.parse(asyncReq);\n    let headers = {\n      'Auth': userInfo.token,\n      'Cache-Control': 'no-cache'\n    };\n    axios.get(\"/restaurants\", {\n      headers\n    }).then(response => {\n      console.log(response); // dispatch(fetchUnreadNotificationsFulfilled(response.data.unread))\n    }).catch(error => {// console.log(error)\n      // dispatch(fetchUnreadNotificationsFulfilled([]))\n    });\n  };\n};\nexport default createStore(reducer, applyMiddleware(thunk));","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/interview/financial education/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","reducer","axios","AsyncStorage","getRestaurants","dispatch","asyncReq","getItem","userInfo","JSON","parse","headers","token","get","then","response","console","log","catch","error"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAA0B,uCAA1B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAO,MAAOC,QAAP,IAAoB;AACzB;AAEA,QAAIC,QAAQ,GAAG,MAAMH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAArB;AACA,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAf;AAEA,QAAIK,OAAO,GAAG;AAAE,cAAQH,QAAQ,CAACI,KAAnB;AAA0B,uBAAiB;AAA3C,KAAd;AAEAV,IAAAA,KAAK,CAACW,GAAN,iBAA0B;AAAEF,MAAAA;AAAF,KAA1B,EAAuCG,IAAvC,CAA4CC,QAAQ,IAAI;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADsD,CAEpD;AACH,KAHD,EAGGG,KAHH,CAGSC,KAAK,IAAI,CAChB;AACA;AAED,KAPD;AASD,GAjBD;AAmBD,CApBM;AAsBP,eAAerB,WAAW,CAACG,OAAD,EAAUF,eAAe,CAACC,KAAD,CAAzB,CAA1B","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport { } from './reducer';\nimport axios from 'axios';\nimport AsyncStorage  from '@react-native-community/async-storage';\n\nexport const getRestaurants = () => {\n  return async (dispatch) => {\n    //put token in all redux\n\n    let asyncReq = await AsyncStorage.getItem('user');\n    let userInfo = JSON.parse(asyncReq)\n\n    let headers = { 'Auth': userInfo.token, 'Cache-Control': 'no-cache' }\n\n    axios.get(`/restaurants`, { headers }).then(response => {\n      console.log(response)\n        // dispatch(fetchUnreadNotificationsFulfilled(response.data.unread))\n    }).catch(error => {\n      // console.log(error)\n      // dispatch(fetchUnreadNotificationsFulfilled([]))\n\n    })\n\n  }\n\n}\n\nexport default createStore(reducer, applyMiddleware(thunk));"]},"metadata":{},"sourceType":"module"}