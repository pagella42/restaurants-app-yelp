{"ast":null,"code":"import _defineProperty from \"/Users/francopagella/Desktop/code/interview/financial education/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport store from \"./store\";\nconst initialState = {\n  restaurants: [],\n  selectedScreen: \"\",\n  selectedItem: null\n}; //Define your action types \n\nconst GET_RESTAURANTS_FULFILLED = 'GET_RESTAURANTS_FULFILLED';\nconst GET_RESTAURANTS_ERROR = 'GET_RESTAURANTS_ERROR';\nconst ITEM_SELECTED = 'ITEM_SELECTED'; //REDUCER\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_RESTAURANTS_FULFILLED:\n      return _objectSpread({}, state, {\n        restaurants: action.payload\n      });\n\n    case GET_RESTAURANTS_ERROR:\n      return _objectSpread({}, state, {\n        restaurants: [],\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //ACTIONS\n\n\nexport const fetchRestaurants = data => {\n  //Return a action type and a loading to false, and the data.\n  return {\n    type: GET_RESTAURANTS_FULFILLED,\n    payload: data\n  };\n};\nexport const fetchRestaurantsError = data => {\n  //Return a action type and a loading to false, and the data.\n  return {\n    type: GET_RESTAURANTS_ERROR,\n    payload: data\n  };\n}; //Export the reducer as a default export \n\nexport default reducer;","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/interview/financial education/src/redux/reducer.js"],"names":["store","initialState","restaurants","selectedScreen","selectedItem","GET_RESTAURANTS_FULFILLED","GET_RESTAURANTS_ERROR","ITEM_SELECTED","reducer","state","action","type","payload","error","fetchRestaurants","data","fetchRestaurantsError"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,cAAc,EAAE,EAFC;AAGjBC,EAAAA,YAAY,EAAE;AAHG,CAArB,C,CAMA;;AACA,MAAMC,yBAAyB,GAAG,2BAAlC;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,aAAa,GAAG,eAAtB,C,CAIA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,yBAAL;AACI,+BAAYI,KAAZ;AAAmBP,QAAAA,WAAW,EAAEQ,MAAM,CAACE;AAAvC;;AACJ,SAAKN,qBAAL;AACI,+BAAYG,KAAZ;AAAmBP,QAAAA,WAAW,EAAE,EAAhC;AAAoCW,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAAlD;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH,CATD,C,CAWA;;;AAKA,OAAO,MAAMK,gBAAgB,GAAIC,IAAD,IAAU;AACtC;AACA,SAAO;AACHJ,IAAAA,IAAI,EAAEN,yBADH;AAEHO,IAAAA,OAAO,EAAEG;AAFN,GAAP;AAIH,CANM;AAQP,OAAO,MAAMC,qBAAqB,GAAID,IAAD,IAAU;AAC3C;AACA,SAAO;AACHJ,IAAAA,IAAI,EAAEL,qBADH;AAEHM,IAAAA,OAAO,EAAEG;AAFN,GAAP;AAIH,CANM,C,CAUP;;AACA,eAAeP,OAAf","sourcesContent":["import store from \"./store\";\n\nconst initialState = {\n    restaurants: [],\n    selectedScreen: \"\",\n    selectedItem: null\n}\n\n//Define your action types \nconst GET_RESTAURANTS_FULFILLED = 'GET_RESTAURANTS_FULFILLED';\nconst GET_RESTAURANTS_ERROR = 'GET_RESTAURANTS_ERROR';\nconst ITEM_SELECTED = 'ITEM_SELECTED';\n\n\n\n//REDUCER\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_RESTAURANTS_FULFILLED:\n            return { ...state, restaurants: action.payload }\n        case GET_RESTAURANTS_ERROR:\n            return { ...state, restaurants: [], error: action.payload }\n        default:\n            return state;\n    }\n}\n\n//ACTIONS\n\n\n\n\nexport const fetchRestaurants = (data) => {\n    //Return a action type and a loading to false, and the data.\n    return {\n        type: GET_RESTAURANTS_FULFILLED,\n        payload: data,\n    };\n}\n\nexport const fetchRestaurantsError = (data) => {\n    //Return a action type and a loading to false, and the data.\n    return {\n        type: GET_RESTAURANTS_ERROR,\n        payload: data,\n    };\n}\n\n\n\n//Export the reducer as a default export \nexport default reducer;"]},"metadata":{},"sourceType":"module"}