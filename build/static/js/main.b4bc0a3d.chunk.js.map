{"version":3,"sources":["redux/reducer.js","Consts.js","redux/store.js","components/side-Bar/SideBar.js","components/list/top/Top.js","components/list/results/Results.js","components/list/List.js","assets/ForkIcon.js","components/detail/Detail.js","components/MainPage.js","index.js"],"names":["initialState","restaurants","selectedScreen","selectedItem","fetchRestaurants","data","type","payload","reducer","state","action","error","CREATE_ROUTE","routeName","window","location","host","includes","TABS","TAB_NAMES","CATEGORIES","LOCATION","getRestaurants","category","dispatch","a","URL","axios","get","then","response","catch","setSelectedItem","item","createStore","applyMiddleware","thunk","connect","content","page","setPage","setSearch","handleOnClick","destination","id","className","onClick","class","icon","faUtensils","faList","search","searchChange","getRestaurantsRequest","onKeyPress","event","key","placeholder","value","onChange","faSearch","map","l","Truncate","lines","ellipsis","name","categories","title","List","useState","list","target","Icon","xmlns","width","viewBox","fill","d","is_closed","alias","display_phone","address1","city","price","review_count","rating","props","store","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4bc0a3d.chunk.js","sourcesContent":["import store from \"./store\";\n\nconst initialState = {\n    restaurants: [],\n    selectedScreen: \"\",\n    selectedItem: null\n}\n\n//Define your action types \nconst GET_RESTAURANTS_FULFILLED = 'GET_RESTAURANTS_FULFILLED';\nconst GET_RESTAURANTS_ERROR = 'GET_RESTAURANTS_ERROR';\nconst ITEM_SELECTED_FULFILLED = 'ITEM_SELECTED_FULFILLED';\n\n//REDUCER\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_RESTAURANTS_FULFILLED:\n            return { ...state, restaurants: action.payload }\n        case GET_RESTAURANTS_ERROR:\n            return { ...state, restaurants: [], error: action.payload }\n        case ITEM_SELECTED_FULFILLED:\n            return { ...state, selectedItem: action.payload  }\n        default:\n            return state;\n    }\n}\n//ACTIONS\n\nexport const fetchRestaurants = (data) => {\n    return {\n        type: GET_RESTAURANTS_FULFILLED,\n        payload: data,\n    };\n}\n\nexport const fetchRestaurantsError = (data) => {\n    return {\n        type: GET_RESTAURANTS_ERROR,\n        payload: data,\n    };\n}\n\nexport const selectItem = (data) => {\n    return {\n        type: ITEM_SELECTED_FULFILLED,\n        payload: data,\n    };\n}\n\n\nexport default reducer;","const createRoute = (routeName) => {\n    return window.location.host.includes('localhost') ?\n        `http://localhost:8000/${routeName}`\n        : `/${routeName}`\n}\nexport const REQUEST_RESULTS_LIMIT = 20\nexport const USER_DEFAULT_LOCATION = \"san francisco\"\nexport const CREATE_ROUTE = createRoute\nexport const TABS = {\n    CATEGORIES: \"CATEGORIES\",\n    LOCATION: \"LOCATION\"\n}\nexport const TAB_NAMES = {\n    CATEGORIES: \"categories\",\n    LOCATION: \"location\"\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\nimport { fetchRestaurants, fetchRestaurantsError, selectItem } from \"./reducer\";\nimport axios from \"axios\";\nimport {\n  CREATE_ROUTE,\n  REQUEST_RESULTS_LIMIT,\n  USER_DEFAULT_LOCATION,\n} from \"../Consts\";\n\nexport const getRestaurants = (location, category) => {\n  return async (dispatch) => {\n    if (!location && !category) {\n      dispatch(fetchRestaurants([]));\n    }\n\n    let URL = `restaurants/${REQUEST_RESULTS_LIMIT}`;\n    \n    if (location) {\n      URL = URL + `/${location}/null`;\n    } else if (category) {\n      URL = URL + `/${USER_DEFAULT_LOCATION}/${category}`;\n    }\n\n    axios\n      .get(CREATE_ROUTE(URL))\n      .then((response) => {\n        dispatch(fetchRestaurants(response.data.data));\n      })\n      .catch((error) => {\n        dispatch(fetchRestaurantsError(error));\n      });\n  };\n};\n\nexport const setSelectedItem = (item) => {\n  return async (dispatch) => {\n      dispatch(selectItem(item));\n  };\n};\n\nexport default createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport './side-bar.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUtensils } from '@fortawesome/free-solid-svg-icons'\nimport { faList } from '@fortawesome/free-solid-svg-icons'\nimport { getRestaurants } from '../../redux/store';\nimport { connect } from 'react-redux';\nimport { TABS } from \"../../Consts\";\n\nfunction SideBar({page, getRestaurants, setPage, setSearch}) {\n    const handleOnClick = (destination) => {\n        getRestaurants([])\n        setPage(destination)\n        setSearch(\"\")\n    }\n\n    return (\n\n        <div id=\"side-bar\">\n            {page === TABS.LOCATION ?\n                <div id=\"side-inner\">\n                    <div className=\"icon-cont icon-clicked\" onClick={() => handleOnClick(TABS.LOCATION)}>\n                        <FontAwesomeIcon class=\"icon\" icon={faUtensils} />\n                    </div>\n                    <div className=\"icon-cont icon-cont-down\" onClick={() => handleOnClick(TABS.CATEGORIES)}>\n                        <FontAwesomeIcon class=\"icon\" icon={faList} />\n                    </div>\n                </div>\n                :\n                <div id=\"side-inner\">\n                    <div className=\"icon-cont icon-cont-up\" onClick={() => handleOnClick(TABS.LOCATION)}>\n                        <FontAwesomeIcon class=\"icon\" icon={faUtensils} />\n                    </div>\n                    <div className=\"icon-cont icon-clicked\" onClick={() => handleOnClick(TABS.CATEGORIES)}>\n                        <FontAwesomeIcon class=\"icon\" icon={faList} />\n                    </div>\n                </div>\n            }\n\n\n\n        </div>\n\n\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getRestaurants: (content) => dispatch(getRestaurants(content))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\n\n\n","import React, { useState } from 'react';\nimport './top.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { getRestaurants } from '../../../redux/store';\nimport { connect } from 'react-redux';\nimport { TABS, TAB_NAMES } from \"../../../Consts\";\n  \nfunction Top({search, searchChange, page, getRestaurants}) {\n    const handleOnkeyPress = (event) => {\n        if(event.key == \"Enter\"){\n            getRestaurantsRequest(search)\n        }\n    }\n    const getRestaurantsRequest = (search) => {\n        if(!search) return\n        if(page === TABS.LOCATION){\n            getRestaurants(search)\n        }\n        else if (page === TABS.CATEGORIES){\n            getRestaurants(null, search)\n        }\n    }\n    return (\n        <div id=\"list-top\">\n            <div id=\"top-inner\">\n\n                {search ?\n                    <div  className=\"title-cont\">\n                        <button onClick={()=>{getRestaurantsRequest(search)}} id=\"search-butt\">Search</button>\n                    </div> :\n                    <div id=\"search-butt-cont\"> \n                      <span className=\"header-title\">{TAB_NAMES[page]}</span>  \n                    </div>\n                    }\n\n                <div className=\"search-cont\">\n                    <input id=\"search\" onKeyPress={handleOnkeyPress} placeholder={`Search by ${TAB_NAMES[page]}`}  value={search} onChange={searchChange}/>\n                    <FontAwesomeIcon className=\"searchIcon\" icon={faSearch} />\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getRestaurants: (location, category) => dispatch(getRestaurants(location, category))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Top);\n","import React from \"react\";\nimport \"./results.css\";\nimport { connect } from 'react-redux';\nimport Truncate from 'react-truncate';\nimport { setSelectedItem } from '../../../redux/store';\n\nfunction Results({restaurants, setSelectedItem}) {\n  return (\n    <div id=\"list-results\">\n      {restaurants && restaurants.map((l) => (\n        <div onClick={()=>setSelectedItem(l)} key={l} className=\"list-item\">\n          <div className=\"result-inner\">\n            <Truncate className=\"result-name\" lines={1} ellipsis={\"...\"}>{l.name}</Truncate>\n            <Truncate className=\"result-category\" lines={1} ellipsis={\"...\"}>{l.categories[0].title}</Truncate>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  restaurants: state.restaurants\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedItem: (item) => dispatch(setSelectedItem(item))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Results);\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport './list.css'\nimport Top from './top/Top';\nimport Results from './results/Results';\n\nfunction List({data, page, search, setSearch}) {\n\n   const [list, setList] = useState([])\n\n   let searchChange = (event) => {\n      setSearch(event.target.value)\n   }\n\n   return (\n      <div id=\"list-container\">\n         <Top page={page} search={search} setSearch={setSearch} searchChange={searchChange} />\n         <Results list={list} />\n      </div>\n\n   )\n}\nexport default List;\n","import React  from 'react';\n\nfunction Icon() {\n   \n   return (\n      <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={\"60%\"}\n      viewBox=\"0 0 380.721 380.721\"\n    >\n      <path fill=\"#AEAEAE\" d=\"M190.372 29.813c-88.673 0-160.546 71.873-160.546 160.547 0 65.89 39.73 122.438 96.504 147.173l2.092-40.525c0-32.242-23.83-21.912-23.83-44.465 0-12.641.395-38.98.395-58.755 0-52.697 22.377-103.673 27.874-115.048 5.53-11.363 18.537-23.76 18.677-11.828 0 17.312.738 218.618.738 218.618h-.035l2.463 61.241c11.497 2.626 23.395 4.125 35.669 4.125 6.728 0 13.304-.546 19.822-1.349l5.31-102.906c-13.106-2.869-24.283-11.212-31.295-21.68-8.685-13.014 6.675-128.067 6.675-128.067h10.004v107.978h9.922V96.894h10.84v107.978h9.889V96.894h11.258v107.978h9.911V96.894h7.668s15.349 115.054 6.669 128.067c-6.947 10.363-18.009 18.682-30.952 21.633-.232.07-.441.163-.441.163l5.02 95.993c63.995-21.11 110.249-81.307 110.249-152.39-.015-88.673-71.888-160.547-160.55-160.547z\" />\n      <path  fill=\"#5D5D5D\" d=\"M190.372 0C85.415 0 0 85.397 0 190.36 0 295.3 85.415 380.721 190.372 380.721c104.952 0 190.35-85.421 190.35-190.361C380.721 85.397 295.324 0 190.372 0zm0 366.523c-97.144 0-176.18-79.03-176.18-176.163 0-97.144 79.036-176.18 176.18-176.18 97.133 0 176.175 79.036 176.175 176.18-.001 97.133-79.043 176.163-176.175 176.163z\" />\n    </svg>\n      )\n}\n\nexport default Icon;\n","import React from \"react\";\nimport \"./detail.css\";\nimport Icon from \"../../assets/ForkIcon\";\nimport { connect } from \"react-redux\";\nimport { setSelectedItem } from \"../../redux/store\";\n\nfunction Detail({ selectedItem, setSelectedItem }) {\n  return (\n    <div id=\"detail-container\">\n      {!selectedItem ? (\n        <div id=\"no-data-cont\">\n          <Icon />\n          <span id=\"icon-detail\">Select a restaurant to display it here!</span>\n        </div>\n      ) : (\n        <div id=\"data-cont\">\n            <div id=\"details-close-row\">\n                <span id=\"details-close\" onClick={()=>setSelectedItem(null)}>X</span>\n            </div>\n            <span className=\"details-data-row name-size-row\">{selectedItem.name}</span>\n            <span className=\"details-data-row big-size-row\">{selectedItem.is_closed ? \"Is closed now\" : \"Is open now\"}</span>\n            <br/>\n            <span className=\"details-data-row big-size-row\">Category: <span className=\"small-size-row\">{selectedItem.categories[0].alias}</span></span>\n            <span className=\"details-data-row big-size-row\">Phone: <span className=\"small-size-row\">+{selectedItem.display_phone}</span></span>\n            <span className=\"details-data-row big-size-row\">Address: <span className=\"small-size-row\">{selectedItem.location.address1}, {selectedItem.location.city}</span></span>\n            <span className=\"details-data-row big-size-row\">Price range: <span className=\"small-size-row\">{selectedItem.price}</span></span>\n            <span className=\"details-data-row big-size-row\">Rating({selectedItem.review_count}): <span className=\"small-size-row\">{selectedItem.rating} stars</span></span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  selectedItem: state.selectedItem,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSelectedItem: (item) => dispatch(setSelectedItem(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n","import React, { useState, useEffect } from 'react';\nimport './main_page.css'\nimport SideBar from './side-Bar/SideBar';\nimport List from './list/List';\nimport Detail from './detail/Detail';\nimport { getRestaurants } from '../redux/store';\nimport { connect } from 'react-redux';\nimport { TABS } from \"../Consts\";\n  \n\nfunction MainPage(props) {\n    const [page, setPage] = useState(TABS.LOCATION)\n    const [search, setSearch] = useState(\"\")\n\n    return (\n        <div id=\"main-page-container\">\n            <SideBar setSearch={setSearch} setPage={setPage} page={page} />\n            <List setSearch={setSearch} search={search} page={page} data={props.data}/>\n            <Detail />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getRestaurants: () => dispatch(getRestaurants())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainPage from './components/MainPage';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from \"./redux/reducer.js\";\n\nlet store = createStore(reducer, applyMiddleware(thunk))\n\nclass App extends React.Component{\n\n  render(){\n      return(\n         <MainPage/>\n      )\n  }\n}\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}